version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: finance_postgres
    environment:
      POSTGRES_DB: finance_api_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Sidekiq
  redis:
    image: redis:7-alpine
    container_name: finance_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails API Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: finance_backend
    volumes:
      - ./backend:/app
      - gems:/usr/local/bundle
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/finance_api_development
      REDIS_URL: redis://redis:6379/0
      RAILS_ENV: development
      JWT_SECRET: finance_app_super_secret_jwt_key_2024
      RAILS_LOG_TO_STDOUT: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      bash -c "
        bundle install &&
        bundle exec rails db:create db:migrate &&
        bundle exec rails server -b 0.0.0.0 -p 3000
      "

  # Sidekiq Background Jobs
  sidekiq:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: finance_sidekiq
    volumes:
      - ./backend:/app
      - gems:/usr/local/bundle
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/finance_api_development
      REDIS_URL: redis://redis:6379/0
      RAILS_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    command: bundle exec sidekiq

volumes:
  postgres_data:
  redis_data:
  gems: